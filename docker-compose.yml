version: '3.5'

services:
  php:
    env_file:
      - .env
    build:
      context: docker/php
      target: apache_php
    ports:
      - ${PORT_PHP}:${PORT_PHP}
    volumes:
      - .${PROJECT_PATH}:${SERVICE_PATH}
      - .${PROJECT_PATH_PUBLIC}:${SERVICE_PATH_PUBLIC}:cached
      - ./docker/php/apache.conf:/etc/apache2/sites-enabled/000-default.conf
    user: "www-data"
    working_dir: ${SERVICE_PATH}
    networks:
      default:
        aliases:
          - ${PROJECT_DOMAIN}
    environment:
      PROJECT_DOMAIN: ${PROJECT_DOMAIN}
      DATABASE_DB: ${DATABASE_DB}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_APP_DRIVER: ${DATABASE_APP_DRIVER}
    command: php -S 0.0.0.0:80 -t ${SERVICE_PATH_PUBLIC}

### not for production
  xdebug:
    build:
      context: docker/php
      target: xdebug_apache_php
    ports:
      - 8080:8181
    working_dir: ${SERVICE_PATH}
    volumes:
      - ".${PROJECT_PATH}:${SERVICE_PATH}"
    environment:
      PROJECT_DOMAIN: ${PROJECT_DOMAIN}
      DATABASE_DB: ${DATABASE_DB}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    command: php -S 0.0.0.0:8181 -t ${SERVICE_PATH_PUBLIC}

  composer:
    build:
      context: docker/php
      target: composer_with_gd
    depends_on:
      - php
    working_dir: ${SERVICE_PATH}
    volumes:
      - ".${PROJECT_PATH}:${SERVICE_PATH}"
    environment:
      - COMPOSER_CACHE_DIR=/app/var/cache/composer
    command: composer u

### not for production
  installsulu:
    build:
      context: docker/php
      target: composer_with_gd
    working_dir: ${SERVICE_PATH}
    volumes:
      - ".${PROJECT_PATH}:${SERVICE_PATH}"
    command: composer create-project sulu/skeleton ${INSTALL_SULU}

  datasink:
    image: postgres:14.2-bullseye
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB}
    ports:
      - '5432:5432'
    volumes:
      - datasink_pg:/var/lib/postgresql/data:delegated

  elasticsearch:
    image: elasticsearch:7.9.3
    ports:
      - ${PORT_ELASTICSEARCH}:9200
    volumes:
      - datasink_es:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: 'false'

volumes:
  datasink_pg:
  datasink_es:
