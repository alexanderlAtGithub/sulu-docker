version: '3.5'

services:
  php:
    env_file:
      - .env
    build:
      context: docker/php
      target: ${CONTAINER_TARGET}
    ports:
      - ${PORT_PHP}:${PORT_PHP}
    volumes:
      - .${PROJECT_PATH}:${SERVICE_PATH}
      - .${PROJECT_PATH_PUBLIC}:${SERVICE_PATH_PUBLIC}:cached
      - ./docker/php/apache.conf:/etc/apache2/sites-enabled/000-default.conf
    user: "www-data"
    working_dir: ${SERVICE_PATH}
    networks:
      default:
        aliases:
          - ${PROJECT_DOMAIN}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      PROJECT_DOMAIN: ${PROJECT_DOMAIN}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: php -S 0.0.0.0:80 -t ${SERVICE_PATH_PUBLIC}

# composer service to do composer things
  composer:
    build:
      context: docker/php
      target: composer_with_gd
    container_name: composer
    depends_on:
      - php
    working_dir: ${SERVICE_PATH}
    volumes:
      - ".${PROJECT_PATH}:${SERVICE_PATH}"
    environment:
      - COMPOSER_CACHE_DIR=/app/var/cache/composer
    command: ps #composer u

  datasink:
    image: mysql:8.0.19
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - ${PORT_MYSQL}:3306
    volumes:
      - ${LOCAL_SINK}/mysql:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  elasticsearch:
    image: elasticsearch:7.9.3
    ports:
      - ${PORT_ELASTICSEARCH}:9200
    volumes:
      - ${LOCAL_SINK}/elasticsearch:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: 'false'
